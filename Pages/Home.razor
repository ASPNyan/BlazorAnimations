@page "/"
@inject NavigationManager NavigationManager

<PageTitle>BlazorAnimations - Home</PageTitle>

<link href="css/Home.css" rel="stylesheet" />

<p id="HomeText">Click a Box To View a Different Window!</p>

<div id="IndexWrapper" Position="@Position">
    <div class="ShapesButton" Roundness="@ShapesRoundness" onclick="@GoToShapes"></div>
    <div class="CirclesButton" Roundness="@CirclesRoundness" onclick="@GoToCircles"></div>
    <div class="ProfileButton" Roundness="@ProfileRoundness" onclick="@GoToProfile"></div>
</div>

<style>
    @@media (min-width: 100vh) {
        #HomeText {
            --Color: @TextColor;
        }
    }
    
    @@media (max-width: 100vh) {
        #HomeText {
            --Color: @VertColor();
        }
    }
</style>


@code {
    bool Vert;
    string TextColor = "deeppink";
    
    bool Animate = true;
    private int Position = 1;

    int ShapesRoundness;
    int CirclesRoundness;
    int ProfileRoundness;

    protected override async Task OnInitializedAsync()
    {
        ChangeRound();
        await Task.Delay(1600);
        
        while (Animate)
        {
            ChangeRound();
            Position++;
            if (!Vert)
                switch (Position)
                {
                    case 1:
                        TextColor = "deeppink";
                        break;
                    case 2:
                        TextColor = "cyan";
                        break;
                    case 3:
                        TextColor = "yellow";
                        break;
                    case 4:
                        Position = 1;
                        TextColor = "deeppink";
                        break;
                }
            ChangeRound();
            await Task.Delay(2000);
            ChangeRound();
            await Task.Delay(2000);
            ChangeRound();
            await Task.Delay(2000);
        }
    }
    
    private void GoToShapes()
    {
        Animate = false;
        NavigationManager.NavigateTo("/LivingShapes");
    }

    private void GoToCircles()
    {
        Animate = false;
        NavigationManager.NavigateTo("/TurningCircles");
    }
    
    private void GoToProfile()
    {
        Animate = false;
        NavigationManager.NavigateTo("https://sebastianricketts.dev/");
    }
}