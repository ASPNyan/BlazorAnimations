@page "/LivingShapes"
@inject NavigationManager NavigationManager

<PageTitle>Living Shapes</PageTitle>

<link href="css/LivingShapes.css" rel="stylesheet" />
<link href="css/Back.css" rel="stylesheet" />

<div id="ShapesWrapper" data-configuration="@Config" data-roundness="@Round">
    <div class="shape"></div>
    <div class="shape"></div>
    <div class="shape"></div>
    <div class="shape"></div>
    <div class="shape"></div>
    <div class="shape"></div>
    <div class="shape"></div>
</div>

<div id="BackArrow" onclick="@Home"></div>

<style>
    #ShapesWrapper > .shape:nth-child(1) {
        background-color: @RandRGB();
        z-index: 2;
    }
    
    #ShapesWrapper > .shape:nth-child(2) {
        background-color: @RandRGB();
        z-index: 2;
    }
    
    #ShapesWrapper > .shape:nth-child(3) {
        background-color: @RandRGB();
        z-index: 1;
    }
    
    #ShapesWrapper > .shape:nth-child(4) {
        background-color: @RandRGB();
        z-index: 2;
    }
    
    #ShapesWrapper > .shape:nth-child(5) {
        background-color: @RandRGB();
        z-index: 2;
    }
    
    #ShapesWrapper > .shape:nth-child(6) {
        background-color: @RandRGB();
        z-index: 2;
    }
    
    #ShapesWrapper > .shape:nth-child(7) {
        background-color: @RandRGB();
        z-index: 2;
    }
</style>

@code {

    private void Home()
    {
        NavigationManager.NavigateTo("/");
    }

    static int Config = 1;
    static int Round = 1;

    static int Previous;

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1);
        await Animate();
    }
}